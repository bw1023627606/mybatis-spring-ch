<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bw.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.bw.entity.Role">
    <id column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_flag" jdbcType="TINYINT" property="roleFlag" />
    <result column="role_delete" jdbcType="TINYINT" property="roleDelete" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_code, role_name, role_flag, role_delete, update_time, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bw.entity.Role">
    insert into tb_role (role_id, role_code, role_name, 
      role_flag, role_delete, update_time, 
      update_by)
    values (#{roleId,jdbcType=BIGINT}, #{roleCode,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{roleFlag,jdbcType=TINYINT}, #{roleDelete,jdbcType=TINYINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bw.entity.Role">
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleFlag != null">
        role_flag,
      </if>
      <if test="roleDelete != null">
        role_delete,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleFlag != null">
        #{roleFlag,jdbcType=TINYINT},
      </if>
      <if test="roleDelete != null">
        #{roleDelete,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bw.entity.Role">
    update tb_role
    <set>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleFlag != null">
        role_flag = #{roleFlag,jdbcType=TINYINT},
      </if>
      <if test="roleDelete != null">
        role_delete = #{roleDelete,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bw.entity.Role">
    update tb_role
    set role_code = #{roleCode,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      role_flag = #{roleFlag,jdbcType=TINYINT},
      role_delete = #{roleDelete,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=BIGINT}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>